{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Energy Monitoring Tool (EMT)","text":"<p>Welcome to the comprehensive documentation for the Energy Monitoring Tool (EMT), a product by FairCompute.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Introduction</li> <li>Getting Started</li> <li>Virtualization Challenges</li> <li>Virtualization Strategies</li> <li>Conclusion</li> </ul> <p>EMT is an open-source initiative for real-time, granular energy monitoring and advanced virtualization support. Use the navigation to explore detailed documentation, architecture, usage, and how EMT stands out from other tools in the field.</p>"},{"location":"conclusion/","title":"Conclusion and Recommendations","text":"<p>The Energy Monitoring Tool (EMT) is a critical open-source initiative for energy observability in modern computing. Its dual operation modes, focus on virtualization, and advanced data collection make it a valuable tool for sustainable and cost-effective operations.</p> <p>By addressing the limitations of existing tools\u2014such as the lack of reliable virtualization support in EnergyMeter, the need for dual deployment in Kepler and PowerAPI, and container labeling issues in Scaphandre\u2014EMT positions itself as a comprehensive, future-ready solution for energy monitoring in complex environments.</p> <p>Recommendations:</p> <ul> <li>Ensure Linux kernel supports eBPF and RAPL permissions</li> <li>Integrate Prometheus export with existing observability stacks</li> <li>Use granular data for workload optimization</li> <li>Combine insights with resource management for energy efficiency</li> <li>Engage with the community for updates and feedback</li> </ul> <p>EMT is developed and maintained by FairCompute. Thank you for exploring the documentation.</p>"},{"location":"executive_summary/","title":"Executive Summary","text":"<p>The Energy Monitoring Tool (EMT) is an open-source solution for granular, real-time energy consumption data. It enhances energy observability, enabling users to identify hotspots and optimize resource utilization for sustainability and cost efficiency. EMT supports detailed per-process energy estimation and Prometheus-based telemetry, with a focus on virtualization challenges in containers and VMs.</p> <p>Unlike many tools such as Kepler or PowerAPI, EMT is designed from the ground up to address the unique challenges of energy attribution in virtualized environments, including both containers and VMs, and to provide seamless integration with standard observability stacks.</p> <p>Explore the Introduction for more context.</p>"},{"location":"getting_started/","title":"EMT Usage Modes","text":""},{"location":"getting_started/#mode-1-per-process-energy-estimation","title":"Mode 1: Per-Process Energy Estimation","text":"<ul> <li>Combines hardware measurements with behavioral models</li> <li>Uses eBPF for kernel-level data collection</li> <li>Leverages RAPL and other hardware counters</li> <li>Focuses on granularity and accuracy</li> </ul> <p>Unlike tools such as EnergyMeter, which are limited to bare-metal environments, EMT is engineered to provide accurate per-process energy estimation even in virtualized and containerized settings.</p>"},{"location":"getting_started/#mode-2-prometheus-based-telemetry","title":"Mode 2: Prometheus-based Telemetry","text":"<ul> <li>Exposes energy metrics via HTTP endpoint in Prometheus format</li> <li>Follows best practices for metric naming and labeling</li> <li>Designed for integration with Grafana and other observability tools</li> </ul> <p>While Kepler and Scaphandre also export Prometheus metrics, EMT emphasizes low-cardinality labeling and robust integration for both container and VM monitoring, reducing the risk of performance bottlenecks in large-scale deployments.</p> <p>See Virtualization Challenges for more details on technical hurdles.</p>"},{"location":"introduction/","title":"Introduction","text":"<p>The Energy Monitoring Tool (EMT) is an open-source solution for granular, real-time energy consumption data. It enhances energy observability, enabling users to identify hotspots and optimize resource utilization for sustainability and cost efficiency. EMT supports detailed per-process energy estimation and Prometheus-based telemetry, with a focus on virtualization challenges in containers and VMs.</p> <p>Unlike many tools such as Kepler or PowerAPI, EMT is designed from the ground up to address the unique challenges of energy attribution in virtualized environments, including both containers and VMs, and to provide seamless integration with standard observability stacks.</p> <p>Welcome to the comprehensive documentation for the Energy Monitoring Tool (EMT), a product by FairCompute.</p>"},{"location":"introduction/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Usage Modes</li> <li>Virtualization Challenges</li> <li>Virtualization Strategies</li> <li>Conclusion</li> </ul> <p>EMT is an open-source initiative for real-time, granular energy monitoring and advanced virtualization support. Use the navigation to explore detailed documentation, architecture, usage, and how EMT stands out from other tools in the field.</p>"},{"location":"virtualization_challenges/","title":"Challenges of Energy Monitoring in Virtualized Environments","text":""},{"location":"virtualization_challenges/#containers-and-cgroups-based-vcpus","title":"Containers and cgroups-based vCPUs","text":"<ul> <li>Ephemerality: Containers are short-lived and dynamic, making real-time tracking difficult.</li> <li>Shared Resources: Containers share CPU, memory, and I/O, complicating energy attribution.</li> <li>cgroups: Provide resource accounting, but not direct energy measurement for vCPUs.</li> </ul> <p>Unlike PowerTOP or Intel Power Gadget, which focus on system-level or hardware-specific monitoring, EMT is designed to attribute energy at the container and cgroup level, even in highly dynamic environments.</p>"},{"location":"virtualization_challenges/#virtual-machines-vms-and-hypervisors","title":"Virtual Machines (VMs) and Hypervisors","text":"<ul> <li>Hypervisor Overhead: Adds complexity to energy attribution.</li> <li>Lack of Direct Hardware Access: VMs can't access hardware counters like RAPL directly.</li> <li>Modeling vs. Measurement: Reliance on models can introduce discrepancies.</li> </ul> <p>Whereas Kepler and PowerAPI require deployment both on the host and inside the VM for full visibility, EMT aims to bridge the observability gap with a multi-layered approach, correlating host and guest data for more accurate attribution.</p> <p>See Virtualization Strategies for solutions and approaches.</p>"},{"location":"virtualization_strategies/","title":"Strategies for Reliable Virtualization Support","text":""},{"location":"virtualization_strategies/#advanced-data-collection","title":"Advanced Data Collection","text":"<ul> <li>Uses eBPF for kernel-level insights</li> <li>Correlates host power data with guest/container activity</li> </ul> <p>Unlike Scaphandre, which may encounter issues with container labeling in Kubernetes, EMT is actively developed to provide robust, accurate labeling and correlation for both containers and VMs.</p>"},{"location":"virtualization_strategies/#attribution-models","title":"Attribution Models","text":"<ul> <li>Employs advanced models (potentially ML-driven)</li> <li>Distinguishes idle vs. dynamic power</li> </ul> <p>EMT's attribution models are designed to overcome the limitations seen in tools like Kepler, where accuracy discrepancies and high-cardinality metrics can impact monitoring quality.</p>"},{"location":"virtualization_strategies/#orchestration-integration","title":"Orchestration Integration","text":"<ul> <li>Prometheus-based telemetry for Kubernetes and VM managers</li> <li>Enables energy-aware scheduling and resource allocation</li> </ul>"},{"location":"virtualization_strategies/#cgroup-based-vcpu-attribution","title":"cgroup-based vCPU Attribution","text":"<ul> <li>Correlates cgroup metrics with RAPL data</li> <li>Enriches metrics with cgroup-specific labels</li> </ul>"},{"location":"virtualization_strategies/#roadmap","title":"Roadmap","text":"<ul> <li>Ongoing model refinement</li> <li>Broader hardware support</li> <li>Deeper orchestration integration</li> <li>Validation and benchmarking</li> <li>User-friendly dashboards</li> </ul> <p>See Conclusion for recommendations and next steps.</p>"}]}