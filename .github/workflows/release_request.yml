# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-wheel:
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: emt-release-${{ github.sha }}
          path: dist/

  pypi-publish:
    runs-on: [self-hosted, linux, x64, philips-code-hub, ubuntu-latest]
    needs:
      - build-wheel

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: emt-release-${{ github.sha }}
          path: dist/

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Publish to JFrog Artifactory PyPI
        env:
          TWINE_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          python -m pip install twine
          python -m twine upload --repository-url https://artifactory-ehv.ta.philips.com/artifactory/api/pypi/dl-innersource-pypi dist/*